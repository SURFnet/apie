{
  "openapi": "3.1.0",
  "info": {
    "version": "5.0.0",
    "title": "Open Education API",
    "description": "OpenAPI (fka Swagger) specification for the Open Education API.\n\n<figure>\n\t<a target=\"_blank\" href=\"OOAPIv5_model.png\">\n  <img src=\"OOAPIv5_model.png\" alt=\"OOAPI information model that feeds OOAPI specification\" width=\"70%\" class=\"img-responsive\">\n  </a>\n  <figcaption> OOAPI information model that feeds OOAPI specification (click to enlage)</figcaption>\n</figure>\n\nThe model provides an overview of how the objects on which the API is specified are related. The overarching concept educations is not found in the in the end points of the API. The smaller concepts of programOffering, courseOffering and conceptOffering are all found in the offering endpoint. The different types of association can all be found in the association endpoint.\n\nThe original file for this model can be found <a target=\"_blank\" href=\"OOAPIv5_model_v0.5.drawio\">here</a>\n\nThe program relations object is not found as a separate endpoint but relations between programs can be found within the program endpoint by expanding that endpoint.\n\nInformation about earlier meetings and presentations can be found <a target=\"_blank\" href=\"https://github.com/open-education-api/notulen\">here</a>\n\nInformation on the EDU-API model that was also used for this api is shown <a target=\"_blank\" href=\"eduapi.png\">here</a>\n",
    "x-logo": {
      "url": "../logo.png"
    }
  },
  "servers": [
    {
      "url": "http://demo01.eduapi.nl/v5",
      "description": "SURF demo implementation"
    }
  ],
  "tags": [
    {
      "name": "service metadata",
      "description": "The service API provides additional metadata needed to make the OOAPI fit for this organization."
    },
    {
      "name": "academic sessions",
      "description": "The academic sessions API provides information about the different time periods a program can be offered."
    },
    {
      "name": "associations",
      "description": "The associations API provides information about the association between an offering and a person (e.g. students, lecturers, etc).\nAssociations can be posted between institutions This requires information details on the offering and the persons.\nTo allow for this information a complete person object and offering object can be part of the API.\nThe structure is explained in the following model:\n<table>\n  <tr>\n   <td></td>\n   <td colspan=3 align=center>offering</td>\n  </tr>\n  <tr>\n   <td rowspan=3>student</td>\n   <td></td>\n   <!-- <td>internal</td>\n   -->\n   <td>external</td>\n  </tr>\n  <tr>\n   <td>internal</td>\n   <!-- <td>POST <a href=\"#tag/offerings/paths/~1offerings~1{offeringId}~1associations~1external/post\">/offerings/{offeringId}/associations/me</a> local enrollment based on selected offering\n    This call will allow for a local student using his .wellknown credentials to enroll for the offering identified by the offeringId\n    <br>Alternatively the association can also be created through POST <a href=\"#tag/associations/paths/~1associations~1me/post\">/associations/me</a>\n   </td>\n   -->\n   <td>POST <a href=\"#tag/associations/paths/~1associations~1external~1me/post\">/associations/external/me</a> gets student details from .wellknown at home institution. It passes offering details (provided by external institution) to the home institution so the home institution can create a placeholder for the offering and its results. \n   </td>\n  </tr>\n  <tr>\n   <td>external</td>\n    <!--\n    <td>\n    This method is not yet implemented it requires full student details and offering details. This would mean the \n    OOAPI message would contain more than one resource in the message. At the moment the student mobility project is looking into\n    a sollution.\n    <br> Alternatively it could be achieved through using two calls:\n    <ul>\n     <li>create student with POST <a href=\"#tag/persons/paths/~1persons~1{personId}/post\">/persons</a></li>\n     <li><a href=\"#tag/offerings/paths/~1offerings~1{offeringId}~1associations~1external/post\">/offerings/{offeringId}/associations/me</a></li>\n    </ul>\n    for the enrollment\n   </td>\n    -->\n   <td>no support needed</td>\n  </tr>\n</table>\nDirect update of current information: <a href=\"#tag/associations/paths/~1associations~1{associationId}/patch\"> PATCH /associations/{associationId}</a>\nThis call is currently limited to passing results and a remote state. For future use other association resource information could be passed. \nMore information on the support for student mobility can be found \n<a href=\"https://swimlanes.io/d/s5mfpj7Si\">here</a>\n"
    },
    {
      "name": "buildings",
      "description": "The building API provides a building that is currently used by the organization. Including all location details."
    },
    {
      "name": "courses",
      "description": "The courses API provides a self-contained and formally structured learning experience. Aimed at providing learning outcomes to students. Usually placed in the context of a program."
    },
    {
      "name": "components",
      "description": "The components API provides information about components being part of parent courses."
    },
    {
      "name": "education specifications",
      "description": "The education specification API provides information on the specification of an education object.\nThis specification allows for other education objects to be derived from it.\nIt is used to aggregate education objects from a supplying institution.\nIt clusters programs to a main educationSpecification that is used in registries such as RIO.\n"
    },
    {
      "name": "groups",
      "description": "The groups API provides information about groups that are related to organizations, persons and offerings. Groups of students that are related to an offering are typically used for rostering. The rostering application assigns students based on these groups. For example, class 1b will be assigned to the course offering on monday morning. Not all groups are related to an offering. A group of people can also be a team that is working on a task outside the OOAPI scope. These can be teams of students, but also teams of employees."
    },
    {
      "name": "news",
      "description": "The news API provides news feeds and items regarding a specific subject."
    },
    {
      "name": "offerings",
      "description": "The offerings API provides information about offerings which have a global timeframe, e.g. a period to which students can enroll."
    },
    {
      "name": "organizations",
      "description": "The organizations API provides the organizations that are responsible for the execution and recognition of education."
    },
    {
      "name": "persons",
      "description": "The persons API provides information about persons related to an organization."
    },
    {
      "name": "programs",
      "description": "The programs API provides a coherent set of educational components, aimed at the realization of competences or objectives in the field of knowledge, insight, attitudes and skills that the person who completes the program must have."
    },
    {
      "name": "rooms",
      "description": "The rooms API provides the part of a building where an activity can take place. Including detail information on the resources available, number of seats, etc. (Updated continuously)"
    },
    {
      "name": "service_model",
      "x-displayName": "Service",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Service\" />\n"
    },
    {
      "name": "education_specification_model",
      "x-displayName": "EducationSpecification",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/EducationSpecification\" />\n"
    },
    {
      "name": "program_model",
      "x-displayName": "Program",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Program\" />\n"
    },
    {
      "name": "course_model",
      "x-displayName": "Course",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Course\" />\n"
    },
    {
      "name": "component_model",
      "x-displayName": "Component",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Component\" />\n"
    },
    {
      "name": "program_offering_model",
      "x-displayName": "ProgramOffering",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ProgramOffering\" />\n"
    },
    {
      "name": "course_offering_model",
      "x-displayName": "CourseOffering",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/CourseOffering\" />\n"
    },
    {
      "name": "component_offering_model",
      "x-displayName": "ComponentOffering",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ComponentOffering\" />\n"
    },
    {
      "name": "association_model",
      "x-displayName": "Association",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Association\" />\n"
    },
    {
      "name": "person_model",
      "x-displayName": "Person",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Person\" />\n"
    },
    {
      "name": "group_model",
      "x-displayName": "Group",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Group\" />\n"
    },
    {
      "name": "academic_session_model",
      "x-displayName": "AcademicSession",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/AcademicSession\" />\n"
    },
    {
      "name": "organization_model",
      "x-displayName": "Organization",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Organization\" />\n"
    },
    {
      "name": "building_model",
      "x-displayName": "Building",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Building\" />\n"
    },
    {
      "name": "room_model",
      "x-displayName": "Room",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/Room\" />\n"
    },
    {
      "name": "news_feed_model",
      "x-displayName": "NewsFeed",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/NewsFeed\" />\n"
    },
    {
      "name": "news_item_model",
      "x-displayName": "NewsItem",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/NewsItem\" />\n"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Requests and respones",
      "tags": [
        "service metadata",
        "academic sessions",
        "associations",
        "buildings",
        "courses",
        "components",
        "education specifications",
        "groups",
        "news",
        "offerings",
        "organizations",
        "persons",
        "programs",
        "rooms"
      ]
    },
    {
      "name": "Models",
      "tags": [
        "service_model",
        "academic_session_model",
        "association_model",
        "building_model",
        "component_model",
        "component_offering_model",
        "course_model",
        "course_offering_model",
        "education_specification_model",
        "group_model",
        "news_feed_model",
        "news_item_model",
        "organization_model",
        "person_model",
        "program_model",
        "program_offering_model",
        "room_model"
      ]
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "openId": {
        "type": "openIdConnect",
        "openIdConnectUrl": "https://example.nl/.well-known/openid-configuration"
      }
    },
    "schemas": {
      "Consumer": {
        "type": "object",
        "description": "Object for communicating data to a specific consumer (destination). This object has no relationship with the `consumer` query parameter.",
        "required": [
          "consumerKey"
        ],
        "properties": {
          "consumerKey": {
            "description": "The key of the consumer (destination) for which this information is intended. See the [consumer registry](https://open-education-api.github.io/specification/#/consumers) for more information.",
            "type": "string"
          }
        },
        "additionalProperties": true
      },
      "Ext": {
        "type": "object",
        "description": "Object for additional non-standard attributes"
      },
      "Service": {
        "type": "object",
        "description": "A metadataset providing details on the provider of this OOAPI implementation",
        "required": [
          "contactEmail",
          "specification",
          "documentation"
        ],
        "properties": {
          "contactEmail": {
            "type": "string",
            "description": "Contact e-mail address of the service owner",
            "format": "email",
            "maxLength": 256,
            "example": "admin@universiteitvanharderwijk.nl"
          },
          "specification": {
            "type": "string",
            "description": "URL of the API specification (YAML or JSON, compliant with [Open API Specification v3](https://github.com/OAI/OpenAPI-Specification/))",
            "format": "uri",
            "maxLength": 2048,
            "example": "https://rawgit.com/open-education-api/specification/v3/docs.html#tag/course-offerings/paths/~1course-offerings/get"
          },
          "documentation": {
            "type": "string",
            "description": "URL of the API documentation, including general terms and privacy statement",
            "format": "uri",
            "maxLength": 2048,
            "example": "https://open-education-api.github.io/specification/v4/docs.html"
          },
          "consumers": {
            "description": "The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Consumer"
            },
            "example": [
              {
                "consumerKey": "x-test-consumer",
                "additional": "custom",
                "attributes": "here"
              }
            ]
          },
          "ext": {
            "$ref": "#/components/schemas/Ext"
          }
        }
      },
      "Problem": {
        "type": "object",
        "description": "A system message including the error code and an explanation",
        "required": [
          "status",
          "title"
        ],
        "properties": {
          "status": {
            "type": "string",
            "description": "The HTTP status code",
            "example": "404"
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable summary of the problem type",
            "example": "Resource not found"
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem"
          }
        }
      },
      "programType": {
        "type": "string",
        "description": "The type of this program\n- program: opleiding\n- minor: minor\n- honours: honours\n- specialization: specialisatie\n- track: track\n",
        "enum": [
          "program",
          "minor",
          "honours",
          "specialization",
          "track"
        ],
        "example": "program"
      },
      "qualificationAwarded": {
        "type": "string",
        "description": "Type of qualificaton that can be obtained on finishing the program",
        "enum": [
          "AD",
          "BA",
          "BSc",
          "LLB",
          "MA",
          "MSc",
          "LLM",
          "Phd",
          "None"
        ],
        "example": "None"
      },
      "levelOfQualification": {
        "type": "string",
        "description": "Level of qualification according to the Dutch National Qualification Framework and the European Qualifications Framework, see [this overview](https://nlqf.nl/images/downloads/English2018/Schematic_overview_NLQF_2020.pdf) for more information.",
        "enum": [
          "1",
          "2",
          "3",
          "4",
          "4+",
          "5",
          "6",
          "7",
          "8"
        ],
        "example": "6"
      },
      "sector": {
        "type": "string",
        "description": "The sector for this program\n- secondary vocational education: middelbaar beroepsonderwijs\n- higher professional education: hoger beroepsonderwijs\n- university education: universitair onderwijs\n",
        "enum": [
          "secondary vocational education",
          "higher professional education",
          "university education"
        ],
        "example": "university education"
      },
      "Pagination": {
        "type": "object",
        "required": [
          "pageSize",
          "pageNumber",
          "hasPreviousPage",
          "hasNextPage",
          "items"
        ],
        "properties": {
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "description": "The number of items per page",
            "example": 10
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32",
            "description": "The current page number",
            "example": 1,
            "minimum": 1
          },
          "hasPreviousPage": {
            "type": "boolean",
            "description": "Whether there is a previous page",
            "example": false
          },
          "hasNextPage": {
            "type": "boolean",
            "description": "Whether there is a previous page",
            "example": true
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of pages",
            "example": 8
          }
        }
      },
      "ProgramId": {
        "type": "object",
        "description": "A collection of courses that lead to a certifiable learning outcome",
        "required": [
          "programId"
        ],
        "properties": {
          "programId": {
            "type": "string",
            "description": "Unique id for this program",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "readOnly": true
          }
        }
      },
      "codeType": {
        "type": "string",
        "description": "The code/identifier type. \n\nThis is an *extensible enumeration*. Use `x-` to prefix custom values\n\nThe predefined values are:\n  - `brin`: The registration number for a Dutch educational institution that is issued by the Dutch Ministry of Education, Culture and Science\n  - `crohoCreboCode`: programs with a CREBO and CROHO number are accredited by the Dutch Ministry of Education, Culture and Science (OCW)\n  - `programCode`: Identifier for the program (collection of courses)\n  - `componentCode`: The code for a component (part of a course)\n  - `offeringCode`: The code to identify a specific offering (program, course or component offering)\n  - `organizationId`: The identifier for the organization\n  - `buildingId`: The number or code to identify a building\n  - `bagId`: The identification of a building as it is known in the Dutch Building Administration (BAG)\n  - `roomCode`: The code for a room\n  - `systemId`: Identifier assigned to an entity in context of a specific system\n  - `productId`: Identifier assigned to a specific product\n  - `nationalIdentityNumber`: Identifier assigned by the governement of the person. e.g. a social security number in the USA\n  - `studentNumber`: Identifier for the student\n  - `studielinkNumber`: Identifier for the person as determined by Studielink\n  - `esi`: European Student Identifier\n  - `userName`: The name of a user\n  - `accountId`: Identifier assigned to a specific account\n  - `emailAdress`: An email address\n  - `groupCode`: The identifier for a group (of persons)\n  - `isbn`: International Standard Book Number that serve as product identifiers for Books\n  - `issn`: International Standard Book Number that serve as product identifiers for periodicals\n  - `orcId`: Open Researcher and Contributor ID\n  - `uuid`: A universally unique identifier\n  - `schacHome`: Home organization using the domain name of the organization\n  - `identifier`: Generic Identifier\n",
        "x-ooapi-extensible-enum": [
          "brin",
          "crohoCreboCode",
          "programCode",
          "componentCode",
          "offeringCode",
          "organizationId",
          "buildingId",
          "bagId",
          "roomCode",
          "systemId",
          "productId",
          "nationalIdentityNumber",
          "studentNumber",
          "studielinkNumber",
          "esi",
          "userName",
          "accountId",
          "emailAdress",
          "groupCode",
          "isbn",
          "issn",
          "orcId",
          "uuid",
          "schacHome",
          "identifier"
        ],
        "example": "identifier"
      },
      "IdentifierEntry": {
        "type": "object",
        "properties": {
          "codeType": {
            "$ref": "#/components/schemas/codeType"
          },
          "code": {
            "description": "Human readable value for the code/identifier",
            "type": "string"
          }
        },
        "required": [
          "codeType",
          "code"
        ],
        "additionalProperties": false,
        "example": {
          "codeType": "identifier",
          "code": "1234qwe12"
        }
      },
      "LanguageTypedString": {
        "type": "object",
        "description": "A String with an associated language code.",
        "properties": {
          "language": {
            "description": "The language used in the described entity. A string formatted according to RFC3066.",
            "type": "string",
            "pattern": "^[a-z]{2,4}(-[A-Z][a-z]{3})?(-([A-Z]{2}|[0-9]{3}))?$"
          },
          "value": {
            "description": "String to describe the entity.",
            "type": "string"
          }
        },
        "example": {
          "language": "en-GB",
          "value": "program that is a place holder for all courses that are made available for student mobility"
        }
      },
      "StudyLoadDescriptor": {
        "type": "object",
        "description": "The amount of effort to complete this education in the specified unit.",
        "properties": {
          "studyLoadUnit": {
            "description": "The unit in which the studyload is specfied\n- contacttime: CONTACTUUR\tamount of time spent in classes\n- ects: ECTS_PUNT\tEuropean Credit Transfer System\n- sbu: SBU\tstudentloadhours\n- sp: STUDIEPUNT studentpoints\n- hour: UUR\thours\n",
            "type": "string",
            "enum": [
              "contacttime",
              "ects",
              "sbu",
              "sp",
              "hour"
            ],
            "example": "ects"
          },
          "value": {
            "description": "The amount of load depicted in numbers",
            "type": "number",
            "example": 3
          }
        },
        "example": {
          "studyLoadUnit": "ects",
          "value": 3
        }
      },
      "modeOfStudy": {
        "type": "string",
        "description": "Indicates whether the education is full-time, part-time, dual or self-paced.\n  - full-time: fulltime\n  - part-time: parttime\n  - dual training: duaal\n  - self-paced: eigen tempo\n",
        "enum": [
          "full-time",
          "part-time",
          "dual training",
          "self-paced"
        ]
      },
      "modesOfDelivery": {
        "type": "array",
        "description": "The mode of delivery of the component (ECTS-mode of delivery)\n- distance-learning: afstandsleren\n- on campus: op de campus\n- online: online\n- hybrid: hybride\n- situated: op locatie\n",
        "items": {
          "type": "string",
          "enum": [
            "distance-learning",
            "on campus",
            "online",
            "hybrid",
            "situated"
          ],
          "example": "situated"
        }
      },
      "level": {
        "type": "string",
        "description": "The level of this course (ECTS-year of study if applicable)\n- secondary vocational education: mbo\n- secondary vocational education 1: mbo 1, corresponds to levelOfQualification 1\n- secondary vocational education 2: mbo 2, corresponds to levelOfQualification 2\n- secondary vocational education 3: mbo 3, corresponds to levelOfQualification 3\n- secondary vocational education 4: mbo 4, corresponds to levelOfQualification 4\n- associate degree: associate degree, corresponds to levelOfQualification 5\n- bachelor: bachelor, corresponds to levelOfQualification 6\n- master: master, corresponds to levelOfQualification 7\n- doctoral: doctoraal, corresponds to levelOfQualification 8\n- undefined: onbepaald\n- undivided: ongedeeld\n- nt2-1: NT2 niveau 1\n- nt2-2: NT2 niveau 2\n",
        "enum": [
          "secondary vocational education",
          "secondary vocational education 1",
          "secondary vocational education 2",
          "secondary vocational education 3",
          "secondary vocational education 4",
          "associate degree",
          "bachelor",
          "master",
          "doctoral",
          "undefined",
          "undivided",
          "nt2-1",
          "nt2-2"
        ],
        "example": "master"
      },
      "Identifier": {
        "type": "string",
        "description": "An identifier of another resource.",
        "format": "uuid"
      },
      "EducationSpecificationId": {
        "type": "object",
        "properties": {
          "educationSpecificationId": {
            "type": "string",
            "description": "Unique id for this education specification",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        },
        "required": [
          "educationSpecificationId"
        ]
      },
      "educationSpecificationType": {
        "type": "string",
        "description": "The type of education specification\n  - program: HOOPLEIDING\n  - privateProgram: PARTICULIEREOPLEIDING\n  - programCluster: HOONDERWIJSEENHEDENCLUSTER\n  - course: HOONDERWIJSEENHEID\n",
        "enum": [
          "program",
          "privateProgram",
          "cluster",
          "course"
        ],
        "example": "program"
      },
      "formalDocument": {
        "type": "string",
        "description": "The type of formal document obtained after completion of this education\n  - diploma: DIPLOMA\n  - certificate: CERTIFICAAT\n  - no official document: GEEN OFFICIEEL DOCUMENT\n  - testimonial: GETUIGSCHRIFT\n  - school advice: SCHOOLADVIES\n",
        "enum": [
          "diploma",
          "certificate",
          "no official document",
          "testimonial",
          "school advice"
        ],
        "example": "diploma"
      },
      "EducationSpecification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EducationSpecificationId"
          },
          {
            "$ref": "#/components/schemas/EducationSpecificationProperties"
          },
          {
            "properties": {
              "validFrom": {
                "description": "The first day this EducationSpecification is valid (inclusive).",
                "type": "string",
                "format": "date"
              },
              "validTo": {
                "description": "The day this EducationSpecification ceases to be valid (e.g. exclusive).",
                "type": "string",
                "format": "date"
              }
            }
          }
        ]
      },
      "organizationType": {
        "type": "string",
        "description": "The type of this organization. Each OOAPI endpoint should have a single organization with type `root`, describing the root organization.\n- root: the root of this organization, representing the Educational Institution itself\n- institute: instituut\n- department: departement\n- faculty: faculteit\n- branch: vestiging\n- academy: academie\n- school: school\n",
        "enum": [
          "root",
          "institute",
          "department",
          "faculty",
          "branch",
          "academy",
          "school"
        ],
        "example": "root"
      },
      "addressType": {
        "type": "string",
        "description": "Address type\n- postal: post\n- visit: bezoek\n- deliveries: bezorg\n- billing: factuur\n- teaching: the address where education takes place\n",
        "enum": [
          "postal",
          "visit",
          "deliveries",
          "billing",
          "teaching"
        ]
      },
      "Address": {
        "type": "object",
        "description": "The full street address",
        "required": [
          "addressType"
        ],
        "properties": {
          "addressType": {
            "$ref": "#/components/schemas/addressType"
          },
          "street": {
            "type": "string",
            "description": "The street name",
            "example": "Moreelsepark"
          },
          "streetNumber": {
            "type": "string",
            "description": "The street number",
            "example": "48"
          },
          "additional": {
            "type": "array",
            "description": "Further details like building name, suite, apartment number, etc.",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/LanguageTypedString"
            },
            "example": [
              {
                "language": "en-GB",
                "value": "On the other side of the road"
              }
            ]
          },
          "postalCode": {
            "type": "string",
            "description": "Postal code",
            "example": "3511 EP"
          },
          "city": {
            "type": "string",
            "description": "name of the city / locality",
            "example": "Utrecht"
          },
          "countryCode": {
            "type": "string",
            "description": "the country code according to [iso-3166-1-alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)",
            "example": "NL"
          },
          "geolocation": {
            "type": "object",
            "description": "Geolocation of the entrance of this address (WGS84 coordinate reference system)",
            "required": [
              "latitude",
              "longitude"
            ],
            "properties": {
              "latitude": {
                "type": "number",
                "format": "double",
                "example": 52.089123
              },
              "longitude": {
                "type": "number",
                "format": "double",
                "example": 5.113337
              }
            }
          },
          "ext": {
            "$ref": "#/components/schemas/Ext"
          }
        }
      },
      "Organization": {
        "type": "object",
        "description": "A description of a group of people working together to achieve a goal",
        "required": [
          "organizationId",
          "organizationType",
          "name",
          "shortName",
          "primaryCode"
        ],
        "properties": {
          "organizationId": {
            "type": "string",
            "description": "Unique id of this organization",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-123514174000",
            "readOnly": true
          },
          "primaryCode": {
            "description": "The primary human readable identifier for the organization. This is often the source identifier as defined by the institution.",
            "$ref": "#/components/schemas/IdentifierEntry",
            "example": {
              "codeType": "orgId",
              "code": "Org01-Root"
            },
            "readOnly": true
          },
          "organizationType": {
            "$ref": "#/components/schemas/organizationType"
          },
          "name": {
            "type": "array",
            "description": "The name of the organization",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/LanguageTypedString"
            },
            "example": [
              {
                "language": "nl-NL",
                "value": "Coöperatie SURF U.A."
              }
            ]
          },
          "shortName": {
            "type": "string",
            "description": "Short name of the organization",
            "maxLength": 256,
            "example": "SURF"
          },
          "description": {
            "type": "array",
            "description": "Any general description of the organization should clearly mention the type of higher education organization, especially in the case of a binary system. In Dutch; universiteit (university) or hogeschool (university of applied sciences).",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/LanguageTypedString"
            },
            "example": [
              {
                "language": "nl-NL",
                "value": "SURF is een coöperatieve vereniging van Nederlandse onderwijs- en onderzoeksinstellingen waarin de leden hun krachten bundelen. De leden zijn eigenaar van SURF."
              }
            ]
          },
          "addresses": {
            "type": "array",
            "description": "Addresses of this organization",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "link": {
            "type": "string",
            "description": "URL of the organization's website",
            "format": "uri",
            "maxLength": 2048,
            "example": "https://surf.nl"
          },
          "logo": {
            "type": "string",
            "description": "Logo of this organization",
            "format": "uri",
            "maxLength": 2048,
            "example": "https://www.surf.nl/themes/surf/logo.svg"
          },
          "otherCodes": {
            "type": "array",
            "description": "An array of additional human readable codes/identifiers for the entity being described.",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/IdentifierEntry"
            },
            "example": [
              {
                "codeType": "brin",
                "code": "00AA"
              },
              {
                "codeType": "kvk",
                "code": "12345678"
              }
            ]
          },
          "parent": {
            "description": "The organizational unit which is the parent of this organization. [`expandable`](#tag/organization_model)\nBy default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.\n",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Identifier",
                "title": "organizationId"
              },
              {
                "$ref": "#/components/schemas/Organization",
                "title": "Organization object"
              }
            ]
          },
          "children": {
            "type": "array",
            "description": "All the organizational units for which this organization is the parent. [`expandable`](#tag/organization_model)\nBy default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.\n",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Identifier",
                  "title": "organizationId"
                },
                {
                  "$ref": "#/components/schemas/Organization",
                  "title": "Organization object"
                }
              ]
            }
          },
          "consumers": {
            "description": "The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Consumer"
            },
            "example": [
              {
                "consumerKey": "x-test-consumer",
                "additional": "custom",
                "attributes": "here"
              }
            ]
          },
          "ext": {
            "$ref": "#/components/schemas/Ext"
          }
        }
      },
      "EducationSpecificationProperties": {
        "type": "object",
        "description": "The specification of an education object. This specification allows for other education objects to be derived from it.\nIt is used to aggregate education objects from a supplying institution.\nIt clusters programs to a main educationSpecification that is used in registries such as RIO. \n",
        "required": [
          "primaryCode",
          "educationSpecificationType",
          "name"
        ],
        "properties": {
          "primaryCode": {
            "description": "The primary human readable identifier for the entity. \nThis will often take the form of a human readable code as defined by the institution or region\n",
            "$ref": "#/components/schemas/IdentifierEntry"
          },
          "otherCodes": {
            "type": "array",
            "description": "An array of additional human readable codes/identifiers for the entity being described.",
            "items": {
              "$ref": "#/components/schemas/IdentifierEntry"
            },
            "example": [
              {
                "codeType": "crohoCreboCode",
                "code": "1234123"
              }
            ]
          },
          "educationSpecificationType": {
            "$ref": "#/components/schemas/educationSpecificationType"
          },
          "name": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageTypedString"
            },
            "description": "The name of this education specification",
            "example": [
              {
                "language": "en-GB",
                "value": "Bachelor Chemical technology"
              }
            ]
          },
          "abbreviation": {
            "type": "string",
            "description": "The abbreviation of this program",
            "maxLength": 256,
            "example": "B Scheikundige Technologie"
          },
          "description": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageTypedString"
            },
            "description": "The description of this program. [The limited implementation of Git Hub Markdown syntax](#tag/formatting-and-displaying-results-from-API) MAY be used for rich text representation.",
            "example": [
              {
                "language": "en-GB",
                "value": "program that is a place holder for all courses that are made available for student mobility"
              }
            ]
          },
          "formalDocument": {
            "$ref": "#/components/schemas/formalDocument"
          },
          "level": {
            "$ref": "#/components/schemas/level"
          },
          "sector": {
            "$ref": "#/components/schemas/sector"
          },
          "levelOfQualification": {
            "$ref": "#/components/schemas/levelOfQualification"
          },
          "fieldsOfStudy": {
            "type": "string",
            "description": "Field(s) of study (e.g. ISCED-F) (http://uis.unesco.org/sites/default/files/documents/isced-fields-of-education-and-training-2013-en.pdf.",
            "maxLength": 4,
            "example": "0732"
          },
          "studyLoad": {
            "$ref": "#/components/schemas/StudyLoadDescriptor"
          },
          "learningOutcomes": {
            "type": "array",
            "description": "Statements that describe the knowledge or skills students should acquire by the end of a particular course or program (ECTS-learningoutcome).",
            "items": {
              "type": "array",
              "minItems": 1,
              "items": {
                "$ref": "#/components/schemas/LanguageTypedString"
              },
              "example": [
                {
                  "language": "en-GB",
                  "value": "Executable knowledge of Chemical technology, including: Acquire knowledge of research paradigms."
                }
              ]
            }
          },
          "link": {
            "type": "string",
            "description": "URL of the program's website",
            "format": "uri",
            "maxLength": 2048,
            "example": "https://bijvak.nl"
          },
          "parent": {
            "description": "The educationSpecification that is the parent of this educationSpecification if it exists. [`expandable`](#tag/education_specification_model)",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Identifier",
                "title": "educationSpecificationId"
              },
              {
                "$ref": "#/components/schemas/EducationSpecification",
                "title": "EducationSpecification"
              }
            ]
          },
          "children": {
            "type": "array",
            "description": "The EducationSpecifications that have this EducationSpecification as their parent. [`expandable`](#tag/education_specification_model)",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Identifier",
                  "title": "educationSpecificationId"
                },
                {
                  "$ref": "#/components/schemas/EducationSpecification",
                  "title": "EducationSpecification"
                }
              ]
            }
          },
          "organization": {
            "description": "The organization that manages this group. [`expandable`](#tag/organization_model)\nBy default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.\n",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Identifier",
                "title": "organizationId"
              },
              {
                "$ref": "#/components/schemas/Organization",
                "title": "Organization object"
              }
            ]
          },
          "consumers": {
            "description": "The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Consumer"
            },
            "example": [
              {
                "consumerKey": "rio",
                "educationSpecificationSubType": "variant",
                "category": [
                  "business_and_project_support",
                  "economy"
                ]
              }
            ]
          },
          "ext": {
            "$ref": "#/components/schemas/Ext"
          }
        }
      },
      "Program": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProgramId"
          },
          {
            "$ref": "#/components/schemas/ProgramProperties"
          },
          {
            "properties": {
              "validFrom": {
                "description": "The first day this program is valid (inclusive).",
                "type": "string",
                "format": "date"
              },
              "validTo": {
                "description": "The day this program ceases to be valid (e.g. exclusive).",
                "type": "string",
                "format": "date"
              }
            }
          }
        ]
      },
      "PersonId": {
        "type": "object",
        "properties": {
          "personId": {
            "type": "string",
            "description": "Unique id of this person",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        },
        "required": [
          "personId"
        ]
      },
      "personAffiliations": {
        "type": "array",
        "description": "The affiliations of this person, the relations a person has with the organization providing this endpoint\n- student: student\n- employee: medewerker\n- guest: gast\n",
        "items": {
          "type": "string",
          "enum": [
            "student",
            "employee",
            "guest"
          ],
          "example": "student"
        }
      },
      "gender": {
        "type": "string",
        "description": "The gender of this person",
        "enum": [
          "M",
          "F",
          "U",
          "X"
        ],
        "example": "F"
      },
      "ICERelationType": {
        "type": "string",
        "description": "Type of relation between person and In Case of Emergency contact",
        "enum": [
          "partner",
          "parent",
          "other"
        ],
        "example": "partner"
      },
      "PersonProperties": {
        "type": "object",
        "description": "A person that has a relationship with this institution",
        "required": [
          "givenName",
          "surname",
          "displayName",
          "affiliations",
          "mail",
          "primaryCode",
          "activeEnrollment"
        ],
        "properties": {
          "primaryCode": {
            "description": "The primary human readable identifier for the person. This is often the source identifier as defined by the institution.",
            "$ref": "#/components/schemas/IdentifierEntry",
            "example": {
              "codeType": "studentNumber",
              "code": 0
            },
            "readOnly": true
          },
          "givenName": {
            "type": "string",
            "description": "The first name of this person",
            "maxLength": 256,
            "example": "Maartje"
          },
          "surnamePrefix": {
            "type": "string",
            "description": "The prefix of the family name of this person",
            "example": "van"
          },
          "surname": {
            "type": "string",
            "description": "The family name of this person",
            "maxLength": 256,
            "example": "Damme"
          },
          "displayName": {
            "type": "string",
            "description": "The name of this person which will be displayed",
            "maxLength": 256,
            "example": "Maartje van Damme"
          },
          "initials": {
            "type": "string",
            "description": "The initials of this person",
            "example": "MCW"
          },
          "activeEnrollment": {
            "type": "boolean",
            "description": "Whether this person has an active enrollment.",
            "example": false
          },
          "dateOfBirth": {
            "type": "string",
            "description": "The date of birth of this person, RFC3339 (full-date)",
            "format": "date",
            "example": "2003-09-30"
          },
          "cityOfBirth": {
            "type": "string",
            "description": "The city of birth of this person",
            "example": "Utrecht"
          },
          "countryOfBirth": {
            "type": "string",
            "description": "The country of birth of this person the country code according to [iso-3166-1-alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)",
            "example": "NL"
          },
          "nationality": {
            "type": "string",
            "description": "The nationality of this person the nationality according to https://gist.github.com/zspine/2365808",
            "example": "Dutch"
          },
          "dateOfNationality": {
            "type": "string",
            "description": "The date of nationality of this person, RFC3339 (full-date)",
            "format": "date",
            "example": "2003-09-30"
          },
          "affiliations": {
            "$ref": "#/components/schemas/personAffiliations"
          },
          "mail": {
            "type": "string",
            "description": "The primary e-mailaddress of this person",
            "format": "email",
            "maxLength": 256,
            "example": "vandamme.mcw@universiteitvanharderwijk.nl"
          },
          "secondaryMail": {
            "type": "string",
            "description": "The secondary e-mailaddress of this person",
            "format": "email",
            "maxLength": 256,
            "example": "poekie@xyz.nl"
          },
          "telephoneNumber": {
            "type": "string",
            "description": "The telephone number of this person",
            "maxLength": 256,
            "example": "+31 123 456 789"
          },
          "mobileNumber": {
            "type": "string",
            "description": "The mobile number of this person",
            "maxLength": 256,
            "example": "+31 612 345 678"
          },
          "photoSocial": {
            "type": "string",
            "description": "The url of the informal picture of this person",
            "format": "uri",
            "maxLength": 2048,
            "example": "https://upload.wikimedia.org/wikipedia/commons/thumb/d/d5/Placeholder_female_superhero_c.png/203px-Placeholder_female_superhero_c.png"
          },
          "photoOfficial": {
            "type": "string",
            "description": "The url of the official picture of this person",
            "format": "uri",
            "maxLength": 2048,
            "example": "https://upload.wikimedia.org/wikipedia/commons/6/66/Johannes_Vermeer_%281632-1675%29_-_The_Girl_With_The_Pearl_Earring_%281665%29.jpg"
          },
          "gender": {
            "$ref": "#/components/schemas/gender"
          },
          "titlePrefix": {
            "type": "string",
            "description": "A title prefix to be used for this person",
            "example": "drs"
          },
          "titleSuffix": {
            "type": "string",
            "description": "A title suffix to be used for this person",
            "example": "BSc"
          },
          "office": {
            "type": "string",
            "description": "The name of the office where this person is located"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "ICEName": {
            "type": "string",
            "description": "Full name of In Case of Emergency contact",
            "maxLength": 256,
            "example": "Janne"
          },
          "ICEPhoneNumber": {
            "type": "string",
            "description": "Phone number of In Case of Emergency contact",
            "maxLength": 256,
            "example": "+31 623 456 789"
          },
          "ICERelation": {
            "$ref": "#/components/schemas/ICERelationType"
          },
          "languageOfChoice": {
            "type": "array",
            "description": "The language(s) of choice for this person, RFC3066",
            "items": {
              "type": "string",
              "example": "nl-NL"
            }
          },
          "otherCodes": {
            "type": "array",
            "description": "An array of additional human readable codes/identifiers for the entity being described.",
            "items": {
              "$ref": "#/components/schemas/IdentifierEntry"
            },
            "example": [
              {
                "codeType": "nationalIdentityNumber",
                "code": "00000"
              }
            ]
          },
          "consumers": {
            "description": "The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Consumer"
            },
            "example": [
              {
                "consumerKey": "x-test-consumer",
                "additional": "custom",
                "attributes": "here"
              }
            ]
          },
          "ext": {
            "$ref": "#/components/schemas/Ext"
          }
        }
      },
      "Person": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PersonId"
          },
          {
            "$ref": "#/components/schemas/PersonProperties"
          }
        ]
      },
      "ProgramProperties": {
        "type": "object",
        "description": "A collection of courses that lead to a certifiable learning outcome",
        "required": [
          "programType",
          "name",
          "abbreviation",
          "description",
          "primaryCode",
          "teachingLanguage"
        ],
        "properties": {
          "primaryCode": {
            "description": "The primary human readable identifier for the program. This is often the source identifier as defined by the institution.",
            "$ref": "#/components/schemas/IdentifierEntry",
            "example": {
              "codeType": "programCode",
              "code": "BIO"
            },
            "readOnly": true
          },
          "programType": {
            "$ref": "#/components/schemas/programType"
          },
          "name": {
            "description": "The name of this program",
            "type": "array",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/LanguageTypedString"
            },
            "example": [
              {
                "language": "en-GB",
                "value": "Biology"
              }
            ]
          },
          "abbreviation": {
            "type": "string",
            "description": "The abbreviation of this program",
            "maxLength": 256,
            "example": "BIO"
          },
          "description": {
            "type": "array",
            "description": "The description of this program",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/LanguageTypedString"
            },
            "example": [
              {
                "language": "en-GB",
                "value": "The study of life"
              }
            ]
          },
          "teachingLanguage": {
            "type": "string",
            "description": "The (primary) teaching language in which this program is given, should be a three-letter language code as specified by ISO 639-2.",
            "minLength": 3,
            "maxLength": 3,
            "pattern": "^[a-z]{3}$",
            "example": "nld"
          },
          "studyLoad": {
            "$ref": "#/components/schemas/StudyLoadDescriptor"
          },
          "qualificationAwarded": {
            "$ref": "#/components/schemas/qualificationAwarded"
          },
          "modeOfStudy": {
            "$ref": "#/components/schemas/modeOfStudy"
          },
          "modeOfDelivery": {
            "$ref": "#/components/schemas/modesOfDelivery"
          },
          "duration": {
            "type": "string",
            "description": "The duration of this program. The duration format is from the ISO 8601 ABNF as given in Appendix A of RFC 3339.",
            "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
            "example": "P1DT30H4S"
          },
          "firstStartDate": {
            "type": "string",
            "description": "The date when participants can follow this program for the first time.",
            "format": "date"
          },
          "levelOfQualification": {
            "$ref": "#/components/schemas/levelOfQualification"
          },
          "level": {
            "$ref": "#/components/schemas/level"
          },
          "sector": {
            "$ref": "#/components/schemas/sector"
          },
          "fieldsOfStudy": {
            "type": "string",
            "description": "Field(s) of study (e.g. ISCED-F) (http://uis.unesco.org/sites/default/files/documents/isced-fields-of-education-and-training-2013-en.pdf.",
            "maxLength": 4,
            "example": "0732"
          },
          "enrollment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageTypedString"
            },
            "description": "The extra information that is provided for enrollment",
            "example": [
              {
                "language": "en-GB",
                "value": "enrollment through SIS. [The limited implementation of Git Hub Markdown syntax](#tag/formatting-and-displaying-results-from-API) MAY be used for rich text representation."
              }
            ]
          },
          "resources": {
            "type": "array",
            "description": "An overview of the literature and other resources that is used in this course (ECTS-recommended reading and other sources)",
            "items": {
              "type": "string"
            },
            "example": [
              "book to be announced",
              "on-line resource x"
            ]
          },
          "learningOutcomes": {
            "type": "array",
            "description": "List of learning outcomes at program level. It is advisable to limit the number of learning outcomes to approximately 20. It is also advisable to make sure that the program learning outcomes in the course catalogue correspond with those on the Diploma Supplement.",
            "items": {
              "type": "array",
              "minItems": 1,
              "items": {
                "$ref": "#/components/schemas/LanguageTypedString"
              },
              "example": [
                {
                  "language": "en-GB",
                  "value": "Executable knowledge of research methods, including: Acquire knowledge of HCI research paradigms."
                }
              ]
            }
          },
          "assessment": {
            "type": "array",
            "description": "A description of the way exams for this course are taken (ECTS-assessment method and criteria).",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/LanguageTypedString"
            },
            "example": [
              {
                "language": "en-GB",
                "value": "Exam on campus"
              }
            ]
          },
          "admissionRequirements": {
            "type": "array",
            "description": "This information may be given at an institutional level and/or at the level of individual programmes. Make sure that it is clear whether the information applies to fee-paying students (national and/or international) or to exchange students.",
            "example": [
              {
                "language": "en-GB",
                "value": "Students need to be enrolled at qualifying institutions of higher education that participate in this alliance"
              }
            ],
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/LanguageTypedString"
            }
          },
          "qualificationRequirements": {
            "type": "array",
            "description": "Normally, students will receive a diploma when they have completed the (official) study program and have obtained the required number of credits. If there are any other specific requirements that students need to have fulfilled, mention them here.",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/LanguageTypedString"
            }
          },
          "link": {
            "type": "string",
            "description": "URL of the program's website",
            "format": "uri",
            "maxLength": 2048,
            "example": "https://bijvak.nl"
          },
          "educationSpecification": {
            "description": "The educationSpecification of which this program is a more concrete implementation. [`expandable`](#tag/education_specification_model)",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Identifier",
                "title": "educationSpecificationId"
              },
              {
                "$ref": "#/components/schemas/EducationSpecification",
                "title": "EducationSpecification"
              }
            ]
          },
          "otherCodes": {
            "type": "array",
            "description": "An array of additional human readable codes/identifiers for the entity being described.",
            "items": {
              "$ref": "#/components/schemas/IdentifierEntry"
            },
            "example": [
              {
                "codeType": "crohoCreboCode",
                "code": "59312"
              }
            ]
          },
          "addresses": {
            "type": "array",
            "description": "Addresses for this program",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "parent": {
            "description": "Parent program of which the current program is a child. This object is [`expandable`](#tag/program_model)",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Identifier",
                "title": "programId"
              },
              {
                "$ref": "#/components/schemas/Program",
                "title": "Expanded Program"
              }
            ]
          },
          "children": {
            "type": "array",
            "description": "Programs which are a part of this program (e.g specializations). This object is [`expandable`](#tag/program_model)",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Identifier",
                  "title": "programId"
                },
                {
                  "$ref": "#/components/schemas/Program",
                  "title": "Expanded Program"
                }
              ]
            }
          },
          "coordinators": {
            "description": "The person(s) responsible for this program. This object is [`expandable`](#tag/person_model)",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Identifier",
                  "title": "personId"
                },
                {
                  "$ref": "#/components/schemas/Person",
                  "title": "Person object"
                }
              ]
            }
          },
          "organization": {
            "description": "The organization providing this program. [`expandable`](#tag/organization_model)\nBy default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.\n",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Identifier",
                "title": "organizationId"
              },
              {
                "$ref": "#/components/schemas/Organization",
                "title": "Organization object"
              }
            ]
          },
          "consumers": {
            "description": "The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Consumer"
            },
            "example": [
              {
                "consumerKey": "rio",
                "educationOffererCode": "122A112",
                "educationLocationCode": "123X122",
                "consentParticipationSTAP": "permission_granted",
                "jointPartnerCodes": [
                  "122A113"
                ],
                "foreignPartners": [
                  "Harvard University"
                ],
                "deficiency": "deficiencies",
                "requirementsActivities": "requirements",
                "propaedeuticPhase": "no_propaedeutic_phase",
                "studyChoiceCheck": "no_study_choice_check",
                "acceleratedRoute": "accelerated_route"
              }
            ]
          },
          "ext": {
            "$ref": "#/components/schemas/Ext"
          }
        }
      },
      "TimelineOverrideProgram": {
        "type": "object",
        "description": "A time-line override of the program.",
        "required": [
          "validFrom",
          "program"
        ],
        "properties": {
          "validFrom": {
            "type": "string",
            "description": "The day on which this timelineOverride starts (inclusive), RFC3339 (date)",
            "format": "date",
            "example": "2021-09-01"
          },
          "validTo": {
            "type": "string",
            "description": "The day on which this timelineOverride ends (exclusive), RFC3339 (date)",
            "format": "date",
            "example": "2022-08-31"
          },
          "program": {
            "$ref": "#/components/schemas/ProgramProperties"
          }
        }
      },
      "ProgramRioConsumer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Consumer"
          },
          {
            "required": [
              "educationOffererCode",
              "consentParticipationSTAP"
            ],
            "properties": {
              "consumerKey": {
                "const": "rio"
              },
              "educationOffererCode": {
                "type": "string",
                "description": "onderwijsaanbiedercode\nEen betekenisloze identifier voor een onderwijsaanbieder in de Registratie Instellingen en Opleidingen.\n",
                "pattern": "^(?:\\d{3}A\\d{3})$"
              },
              "educationLocationCode": {
                "type": "string",
                "description": "onderwijslocatiecode\nEen betekenisloze identifier voor een onderwijslocatie in de Registratie Instellingen en Opleidingen.\n",
                "pattern": "^(?:\\d{3}X\\d{3})$"
              },
              "consentParticipationSTAP": {
                "type": "string",
                "description": "toestemmingDeelnameSTAP\nGeeft aan of een AangebodenOpleiding beschikbaar is in het kader van de STAP-regeling en voorkomt in het Scholingsregister.\n",
                "enum": [
                  "permission_granted",
                  "permission_not_granted"
                ]
              },
              "jointPartnerCodes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "^(?:\\d{3}A\\d{3})$"
                },
                "minItems": 1,
                "description": "samenwerkendeOnderwijsaanbiedercode\nCode van de onderwijsaanbieder waarmee wordt samengewerkt OnderwijsaanbiederID-v01\n"
              },
              "foreignPartners": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1,
                "description": "buitenlandsePartner\nBeschrijving van de organisatie waarmee door een Nederlandse onderwijsbestuur wordt samengewerkt\nbij het verzorgen van een Joint Degree.\n"
              },
              "deficiency": {
                "type": "string",
                "description": "deficientie Geeft aan of inschrijving met onvoldoende vooropleiding mogelijk is\n- deficiencies: DEFICIENTIES\t\t\tInschrijving mogelijk met onvoldoende vooropleiding\n- no_dediciencies: GEEN_DEFICIENTIES\t\t\tInschrijving alleen mogelijk met voldoende vooropleiding\n",
                "enum": [
                  "deficiencies",
                  "no_deficiencies"
                ]
              },
              "requirementsActivities": {
                "type": "string",
                "description": "eisenWerkzaamheden\nGeeft aan of er eisen zijn gesteld aan het type werkzaamheden die verricht worden in het kader van de opleiding.\n- requirements: EISEN\t\t\tEr zijn eisen gesteld aan de werkzaamheden in het kader van de opleiding\n- no_requirements: GEEN_EISEN\t\t\tEr zijn geen eisen gesteld aan de werkzaamheden in het kader van de opleiding\n",
                "enum": [
                  "requirements",
                  "no_requirements"
                ]
              },
              "propaedeuticPhase": {
                "type": "string",
                "description": "propadeutischeFase\nGeeft aan of de aangeboden opleiding een propedeutische fase kent en of deze wordt afgesloten met een propedeutisch examen.\n- no_propaedeutic_phase: GEEN_PROPEDEUTISCHE_FASE\t\t\tGeen propedeutische fase\n- propaedeutic_phase_exam: PROPEDEUTISCHE_FASE_EXAMEN\t\t\tPropedeutische fase met examen\n- propaedeutic_phase_no_exam: PROPEDEUTISCHE_FASE_ZONDER_EXAMEN\t\t\tPropedeutische fase zonder examen\n",
                "enum": [
                  "no_propaedeutic_phase",
                  "propaedeutic_phase_exam",
                  "propaedeutic_phase_no_exam"
                ]
              },
              "studyChoiceCheck": {
                "type": "string",
                "description": "studiekeuzecheck\nSpecificeert of er en zo ja hoe een controle op geschiktheid van een aankomend student voor deelname aan gekozen studie plaatsvindt.\n- no_study_choice_check: GEEN_STUDIEKEUZE_CHECK\t\t\tGeen studiekeuzecheck\n- study_choice_check_available: STUDIEKEUZE_CHECK_VAN_TOEPASSING\t\t\tStudiekeuzecheck van toepassing\n- study_choice_check_mandatory: STUDIEKEUZE_CHECK_VERPLICHT\t\t\tStudiekeuzecheck verplicht\n",
                "enum": [
                  "no_study_choice_check",
                  "study_choice_check_available",
                  "study_choice_check_mandatory"
                ]
              },
              "acceleratedRoute": {
                "type": "string",
                "description": "versneldTraject\nGeeft aan of een student een versneld programma volgt zodat het opleiding in minder tijd dan normaal doorlopen kan worden.\n- accelerated_route: VERSNELD_TRAJECT\t\t\tVersneld traject\n- no_accelerated_route: GEEN_VERSNELD_TRAJECT\t\t\tGeen versneld traject\n",
                "enum": [
                  "accelerated_route",
                  "no_accelerated_route"
                ]
              }
            }
          }
        ]
      },
      "ProgramExpanded": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Program"
          },
          {
            "type": "object",
            "description": "These properties are only present when explicitly included. This allows for creating and displaying structures of programs",
            "properties": {
              "timelineOverrides": {
                "description": "Timeline overrides allow an implementation to provide versions of entities that will be valid in the future or have been in the past.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TimelineOverrideProgram"
                }
              }
            }
          }
        ],
        "required": [
          "programId",
          "programType",
          "name",
          "abbreviation",
          "description",
          "primaryCode",
          "teachingLanguage",
          "validFrom",
          "educationSpecification",
          "duration"
        ],
        "properties": {
          "consumers": {
            "contains": {
              "$ref": "#/components/schemas/ProgramRioConsumer"
            }
          }
        }
      },
      "OfferingId": {
        "type": "object",
        "description": "ID of Either a program, course or component offering which descrbes the program, course or offering in time",
        "required": [
          "offeringId"
        ],
        "properties": {
          "offeringId": {
            "type": "string",
            "description": "Unique id of this offering",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-134564174000",
            "readOnly": true
          }
        }
      },
      "academicSessionType": {
        "type": "string",
        "description": "The type of this Academic Session This is an *extensible enumeration*.\n- academic year: academic year\n- semester: semester, typically there are two semesters per academic year\n- trimester: trimester, typically there are three semesters per academic year\n- quarter: quarter, typically there are four quarters per academic year\n- testing period: a period in which tests take place\n- period: any other period in an academic year\n\nImplementations are allowed to add additional values to those above, as long as they do not overlap in definition to existing values.\n",
        "example": "semester",
        "x-ooapi-extensible-enum": [
          "academic year",
          "semester",
          "trimester",
          "quarter",
          "testing period",
          "period"
        ]
      },
      "AcademicSession": {
        "type": "object",
        "description": "A named period of time that can be used to communicate the various schedules and time periods an institution recognizes and uses to organize their education. AcademicSessions can be nested.\nOfferings MAY be be linked to a specific AcademicSession to indicate that the specified Offering takes place during the AcademicSession, however this is not mandatory.\n",
        "required": [
          "academicSessionId",
          "name",
          "startDate",
          "endDate"
        ],
        "properties": {
          "academicSessionId": {
            "type": "string",
            "description": "Unique id for this academic session",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "readOnly": true
          },
          "academicSessionType": {
            "$ref": "#/components/schemas/academicSessionType"
          },
          "primaryCode": {
            "description": "The primary human readable identifier for this academic session. This is often the source identifier as defined by the institution.",
            "$ref": "#/components/schemas/IdentifierEntry",
            "example": {
              "codeType": "identifier",
              "code": "2012-Q1"
            }
          },
          "name": {
            "type": "array",
            "description": "The name of this academic session",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/LanguageTypedString"
            },
            "example": [
              {
                "language": "en-GB",
                "value": "Fall semester 2020"
              }
            ]
          },
          "startDate": {
            "type": "string",
            "description": "The day on which this academic session starts, RFC3339 (full-date)",
            "format": "date",
            "example": "2020-08-17"
          },
          "endDate": {
            "type": "string",
            "description": "The day on which this academic session ends, RFC3339 (full-date)",
            "format": "date",
            "example": "2020-12-18"
          },
          "parent": {
            "description": "The parent Academicsession of this session (e.g. fall semester 20xx where the current session is a week 40). This object is [`expandable`](#tag/academic_sessions_model)",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Identifier",
                "title": "academicSessionId"
              },
              {
                "$ref": "#/components/schemas/AcademicSession",
                "title": "Expanded AcademicSession"
              }
            ]
          },
          "children": {
            "type": "array",
            "description": "The list of Academicsession children of this Session (e.g. all academic sessions in fall semester 20xx). This object is [`expandable`](#tag/academic_sessions_model)",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Identifier",
                  "title": "academicSessionId"
                },
                {
                  "$ref": "#/components/schemas/AcademicSession",
                  "title": "Expanded AcademicSession"
                }
              ]
            }
          },
          "year": {
            "description": "The top level year of this session (e.g. 20xx where the current session is a week 40 of a semester). This object is [`expandable`](#tag/academic_sessions_model)",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Identifier",
                "title": "academicSessionId"
              },
              {
                "$ref": "#/components/schemas/AcademicSession",
                "title": "Expanded AcademicSession"
              }
            ]
          },
          "otherCodes": {
            "type": "array",
            "description": "An array of additional human readable codes/identifiers for the entity being described.",
            "items": {
              "$ref": "#/components/schemas/IdentifierEntry"
            }
          },
          "consumers": {
            "description": "The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Consumer"
            },
            "example": [
              {
                "consumerKey": "x-test-consumer",
                "additional": "custom",
                "attributes": "here"
              }
            ]
          },
          "ext": {
            "$ref": "#/components/schemas/Ext"
          }
        }
      },
      "resultValueType": {
        "type": "string",
        "description": "The result value type for this offering",
        "enum": [
          "pass-or-fail",
          "US letter",
          "UK letter",
          "0-100",
          "1-10"
        ],
        "example": "1-10"
      },
      "OfferingProperties": {
        "type": "object",
        "description": "Either a program, course or component offering which descrbes the program, course or offering in time",
        "required": [
          "primaryCode",
          "offeringType",
          "name",
          "description",
          "teachingLanguage",
          "resultExpected"
        ],
        "properties": {
          "primaryCode": {
            "description": "The primary human readable identifier for this offering. This is often the source identifier as defined by the institution.",
            "$ref": "#/components/schemas/IdentifierEntry",
            "example": {
              "codeType": "offeringCode",
              "code": "INFOMQNM-20FS"
            },
            "readOnly": true
          },
          "offeringType": {
            "type": "string",
            "description": "The type of this offering",
            "enum": [
              "program",
              "course",
              "component"
            ],
            "example": "component"
          },
          "academicSession": {
            "$ref": "#/components/schemas/AcademicSession"
          },
          "name": {
            "type": "array",
            "description": "The name of this offering",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/LanguageTypedString"
            },
            "example": [
              {
                "language": "en-GB",
                "value": "Final written test for INFOMQNM for fall semseter 2020"
              }
            ]
          },
          "abbreviation": {
            "type": "string",
            "description": "The abbreviation or internal code used to identify this offering",
            "maxLength": 256,
            "example": "Test-INFOMQNM-20FS"
          },
          "description": {
            "type": "array",
            "description": "The description of this offering.",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/LanguageTypedString"
            },
            "example": [
              {
                "language": "en-GB",
                "value": "'Prove in writing knowledge of research methods, including:\nAcquire knowledge of HCI research paradigms\nAble to design suitable research studies (e.g., choose between within and between subject designs)\nDefine/apply/design metrics and scales\nDefine/produce materials (e.g., stimuli and questionnaires)\nDefine protocols for research studies\nUnderstands and take in account concepts of reliability and validity\nAnalyze and improve methods and analysis of published scientific articles\nAble to deliver scientific reports\nProve in writing knowledge of ­­­statistics, including:\nHandle hypothesis testing with complex designs (e.g., including , dependent, independent, and co variates)\nData preparation (e.g., coding and feature selection)\nReason towards adequate techniques to ensure valid outcomes (e.g., be aware of type I, type II errors)\nSelect an appropriate sampling method (e.g., stratified)\nPerform parametric tests (e.g., repeated measures (M)ANOVA)\nPerform non-parametric tests (e.g., Chi-square, Mann-Whitney, and Kruskal-Wallis)'\n"
              }
            ]
          },
          "teachingLanguage": {
            "type": "string",
            "description": "The (primary) teaching language in which this offering is given, should be a three-letter language code as specified by ISO 639-2.",
            "minLength": 3,
            "maxLength": 3,
            "pattern": "^[a-z]{3}$",
            "example": "nld"
          },
          "modeOfDelivery": {
            "$ref": "#/components/schemas/modesOfDelivery"
          },
          "maxNumberStudents": {
            "type": "number",
            "description": "The maximum number of students allowed to enroll for this offering",
            "format": "int32",
            "minimum": 0,
            "example": 200
          },
          "enrolledNumberStudents": {
            "type": "number",
            "description": "The number of students that have already enrolled for this offering",
            "format": "int32",
            "minimum": 0,
            "example": 150
          },
          "pendingNumberStudents": {
            "type": "number",
            "description": "The number of students that have a pending enrollment request for this offering",
            "format": "int32",
            "minimum": 0,
            "example": 50
          },
          "minNumberStudents": {
            "type": "number",
            "description": "The minimum number of students needed for this offering to proceed",
            "format": "int32",
            "minimum": 0,
            "example": 15
          },
          "resultExpected": {
            "type": "boolean",
            "description": "resultExpected, previously knwon as isLineItem is used so the specific instance of the object is identified as being an element that CAN contain “grade” information.\nOfferings do not always have to result in a grade or an other type of result. \nIf there is a result expected from a programOffering/courseOffering/componentOffering the is resultExpected field should parse true\n",
            "example": true
          },
          "resultValueType": {
            "$ref": "#/components/schemas/resultValueType"
          },
          "link": {
            "type": "string",
            "description": "URL of this offering's webpage.",
            "format": "uri",
            "maxLength": 2048,
            "example": "https://osiris.uu.nl/osiris_student_uuprd/OnderwijsCatalogusZoekCursus.do#submitForm?cursuscode=INFOMQNM"
          },
          "otherCodes": {
            "type": "array",
            "description": "An array of additional human readable codes/identifiers for the entity being described.",
            "items": {
              "$ref": "#/components/schemas/IdentifierEntry"
            }
          },
          "consumers": {
            "description": "The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Consumer"
            },
            "example": [
              {
                "consumerKey": "rio",
                "explanationRequiredPermission": "Toestemming is vereist omdat we daarom vragen.",
                "requiredPermissionRegistration": "yes",
                "registrationStatus": "open"
              }
            ]
          },
          "ext": {
            "$ref": "#/components/schemas/Ext"
          }
        }
      },
      "Offering": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OfferingId"
          },
          {
            "$ref": "#/components/schemas/OfferingProperties"
          }
        ]
      },
      "costType": {
        "type": "string",
        "description": "The type of the cost. This is an *extensible enumeration*.\n\nThe following values have been defined in the specification:\n  - `STAP eligible`: the costs that a student can get STAP subsidy for\n  - `total costs`: the total costs that a student is to pay to follow this offering\n\nImplementations are allowed to add additional values to those above, as long as they do not overlap in definition to existing values.\n",
        "example": "total costs",
        "x-ooapi-extensible-enum": [
          "STAP eligible",
          "total costs"
        ]
      },
      "Cost": {
        "type": "object",
        "required": [
          "costType"
        ],
        "properties": {
          "costType": {
            "$ref": "#/components/schemas/costType"
          },
          "amount": {
            "type": "string",
            "pattern": "^\\d+(?:\\.\\d+)?$",
            "description": "The total amount of the cost as a string. Use a '.' (dot) as an optional separator. The numbers before the separator signify the major units of the currency, after the dot the minor units. Only a single separator is allowed. Do not use a comma.",
            "example": "340.84"
          },
          "vatAmount": {
            "type": "string",
            "pattern": "^\\d+(?:\\.\\d+)?$",
            "description": "The part of the cost that is VAT, as a string. Use a '.' (dot) as an optional separator. The numbers before the separator signify the major units of the currency, after the dot the minor units. Only a single separator is allowed. Do not use a comma.",
            "example": "40"
          },
          "amountWithoutVat": {
            "type": "string",
            "pattern": "^\\d+(?:\\.\\d+)?$",
            "description": "The part of the cost that is non-VAT. as a string. Use a '.' (dot) as an optional separator. The numbers before the separator signify the major units of the currency, after the dot the minor units. Only a single separator is allowed. Do not use a comma.",
            "example": "300.84"
          },
          "currency": {
            "type": "string",
            "description": "The currency this cost is in. Should correspond to one of the currency codes from ISO 4217.",
            "example": "EUR"
          },
          "displayAmount": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageTypedString"
            },
            "description": "An array of optional pre-formatted strings in different locales. Clients can choose to use this string instead of rendering their own based on the current locale of the user.",
            "example": [
              {
                "language": "nl-NL",
                "value": "€380,84"
              },
              {
                "language": "en-US",
                "value": "$401.17"
              }
            ]
          },
          "ext": {
            "$ref": "#/components/schemas/Ext"
          }
        },
        "additionalProperties": false
      },
      "ProgramOfferingProperties": {
        "type": "object",
        "required": [
          "modeOfStudy",
          "startDate",
          "endDate"
        ],
        "properties": {
          "startDate": {
            "type": "string",
            "description": "The moment on which this offering starts, RFC3339 (full-date)",
            "format": "date",
            "example": "2019-08-21"
          },
          "endDate": {
            "type": "string",
            "description": "The moment on which this offering ends, RFC3339 (full-date)",
            "format": "date",
            "example": "2023-06-15"
          },
          "enrollStartDate": {
            "type": "string",
            "description": "The first day on which a student can enroll for this program.",
            "format": "date",
            "example": "2019-05-01"
          },
          "enrollEndDate": {
            "type": "string",
            "description": "The last day on which a student can enroll for this program.",
            "format": "date",
            "example": "2019-08-01"
          },
          "flexibleEntryPeriodStart": {
            "type": "string",
            "description": "If this is a program wherein participants can start at various moments, without missing anything, use this attribute in combination with `flexibleEntryPeriodEnd`.",
            "format": "date"
          },
          "flexibleEntryPeriodEnd": {
            "type": "string",
            "description": "If this is a program wherein participants can start at various moments, without missing anything, use this attribute in combination with `flexibleEntryPeriodStart`.",
            "format": "date"
          },
          "addresses": {
            "type": "array",
            "description": "Addresses for this offering",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "priceInformation": {
            "type": "array",
            "description": "Price information for this offering.",
            "items": {
              "$ref": "#/components/schemas/Cost"
            },
            "minItems": 1
          },
          "program": {
            "description": "The Program that is offered in this programoffering. [`expandable`](#tag/program_model)\nBy default only the `programId` (a string) is returned. If the client requested an expansion of `program` the full program object should be returned.\n",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Identifier",
                "title": "programId"
              },
              {
                "$ref": "#/components/schemas/Program",
                "title": "Program object"
              }
            ]
          },
          "organization": {
            "description": "The organization that manages this programeoffering. [`expandable`](#tag/organization_model)\nBy default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.\n",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Identifier",
                "title": "organizationId"
              },
              {
                "$ref": "#/components/schemas/Organization",
                "title": "Organization object"
              }
            ]
          },
          "academicSession": {
            "description": "The academicsession during which this programoffering takes place. [`expandable`](#tag/academic_session_model)\nBy default only the `academicSessionId` (a string) is returned. If the client requested an expansion of `academicSession` the full academicsession object should be returned.\n",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Identifier",
                "title": "academicSessionId"
              },
              {
                "$ref": "#/components/schemas/AcademicSession",
                "title": "AcademicSession object"
              }
            ]
          }
        }
      },
      "OfferingRioConsumer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Consumer"
          },
          {
            "required": [
              "registrationStatus",
              "requiredPermissionRegistration"
            ],
            "properties": {
              "explanationRequiredPermission": {
                "type": "string",
                "description": "toelichtingVereisteToestemming\nIs een tekstuele toelichting op de voor aanmelding vereiste toestemming van de onderwijsaanbieder\n"
              },
              "requiredPermissionRegistration": {
                "type": "string",
                "description": "toestemmingVereistVoorAanmelding\nGeeft aan of een aspirant-student voor een bepaald cohort van een aangeboden opleiding toestemming van de onderwijsaanbieder nodig heeft om zich aan te mogen melden.\n- yes: JA\n- no: NEE\n",
                "enum": [
                  "yes",
                  "no"
                ]
              },
              "registrationStatus": {
                "type": "string",
                "description": "cohortStatus\nDe toegestane waarden voor de status van een cohort van een aangeboden opleiding. Hiermee kan bijvoorbeeld worden aangegeven of een bepaald cohort open staat voor aanmelding, of dat het gesloten is.\n",
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "modeOfDelivery": {
                "type": "string",
                "description": "The value of consumers RIO modeOfDelivery will override the main object's modeOfDelivery when using the RIO mapper",
                "enum": [
                  "online",
                  "hybrid",
                  "situated",
                  "lecture",
                  "self-study",
                  "coaching"
                ]
              }
            }
          }
        ]
      },
      "ProgramOffering": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Offering"
          },
          {
            "$ref": "#/components/schemas/ProgramOfferingProperties"
          },
          {
            "required": [
              "offeringId",
              "primaryCode",
              "offeringType",
              "name",
              "description",
              "teachingLanguage",
              "resultExpected",
              "startDate",
              "endDate",
              "enrollStartDate"
            ]
          }
        ],
        "properties": {
          "consumers": {
            "contains": {
              "$ref": "#/components/schemas/OfferingRioConsumer"
            }
          }
        }
      },
      "CourseId": {
        "type": "object",
        "description": "An object describing the metadata of a course",
        "required": [
          "courseId"
        ],
        "properties": {
          "courseId": {
            "type": "string",
            "description": "Unique id of this course",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "readOnly": true
          }
        }
      },
      "CourseProperties": {
        "type": "object",
        "description": "An object describing the metadata of a course",
        "required": [
          "name",
          "abbreviation",
          "description",
          "teachingLanguage",
          "level",
          "primaryCode"
        ],
        "properties": {
          "primaryCode": {
            "description": "The primary human readable identifier for this course. This is often the source identifier as defined by the institution.",
            "$ref": "#/components/schemas/IdentifierEntry",
            "readOnly": true
          },
          "name": {
            "type": "array",
            "description": "The name of this course (ECTS-title)",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/LanguageTypedString"
            },
            "example": [
              {
                "language": "en-GB",
                "value": "Academic and Professional Writing"
              }
            ]
          },
          "abbreviation": {
            "type": "string",
            "description": "The abbreviation or internal code used to identify this course (ECTS-code)",
            "maxLength": 256,
            "example": "INFOMQNM"
          },
          "studyLoad": {
            "$ref": "#/components/schemas/StudyLoadDescriptor"
          },
          "modeOfDelivery": {
            "$ref": "#/components/schemas/modesOfDelivery"
          },
          "duration": {
            "type": "string",
            "description": "The duration of this course. The duration format is from the ISO 8601 ABNF as given in Appendix A of RFC 3339.",
            "pattern": "^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$",
            "example": "P1DT30H4S"
          },
          "firstStartDate": {
            "type": "string",
            "description": "The date when participants can follow this course for the first time.",
            "format": "date"
          },
          "description": {
            "type": "array",
            "description": "The description of this course (ECTS-description).",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/LanguageTypedString"
            },
            "example": [
              {
                "language": "en-GB",
                "value": "As with all empirical sciences, to assure valid outcomes, HCI studies heavily rely on research methods and statistics. This holds for the design of user interfaces, personalized recommender systems, and interaction paradigms for the internet of things. This course prepares you to do so by learning you to collect data, design experiments, and analyze the results. By the end of the course, you will have a detailed understanding of how to select and apply quantitative research methods and analysis to address virtually all HCI challenges. Quantitative research and data analysis will be taught in the context of state-of-the-art HCI challenges. Lectures will be alternated with hands-on learning, including work with predefined datasets (e.g., addressing facial features, cognitive load, and emotion). Additionally, students will set up their own research (e.g., using eye tracking). Data processing and analysis will be executed using R."
              }
            ]
          },
          "teachingLanguage": {
            "type": "string",
            "description": "The (primary) teaching language in which this course is given, should be a three-letter language code as specified by ISO 639-2.",
            "minLength": 3,
            "maxLength": 3,
            "pattern": "^[a-z]{3}$",
            "example": "nld"
          },
          "fieldsOfStudy": {
            "type": "string",
            "description": "Field(s) of study (e.g. ISCED-F) (http://uis.unesco.org/sites/default/files/documents/isced-fields-of-education-and-training-2013-en.pdf.",
            "maxLength": 4,
            "example": "0732"
          },
          "learningOutcomes": {
            "type": "array",
            "description": "Statements that describe the knowledge or skills students should acquire by the end of a particular course (ECTS-learningoutcome).",
            "items": {
              "type": "array",
              "minItems": 1,
              "items": {
                "$ref": "#/components/schemas/LanguageTypedString"
              },
              "example": [
                {
                  "language": "en-GB",
                  "value": "Executable knowledge of research methods, including: Acquire knowledge of HCI research paradigms."
                }
              ]
            }
          },
          "admissionRequirements": {
            "type": "array",
            "description": "This information may be given at an institutional level and/or at the level of individual programmes. Make sure that it is clear whether the information applies to fee-paying students (national and/or international) or to exchange students.",
            "example": [
              {
                "language": "en-GB",
                "value": "Students need to be enrolled at qualifying institutions of higher education that participate in this alliance"
              }
            ],
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/LanguageTypedString"
            }
          },
          "qualificationRequirements": {
            "type": "array",
            "description": "Normally, students will receive a diploma when they have completed the (official) study program and have obtained the required number of credits. If there are any other specific requirements that students need to have fulfilled, mention them here.",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/LanguageTypedString"
            }
          },
          "level": {
            "$ref": "#/components/schemas/level"
          },
          "enrollment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageTypedString"
            },
            "description": "The extra information that is provided for enrollment",
            "example": [
              {
                "language": "en-GB",
                "value": "enrollment through SIS. [The limited implementation of Git Hub Markdown syntax](#tag/formatting-and-displaying-results-from-API) MAY be used for rich text representation."
              }
            ]
          },
          "resources": {
            "type": "array",
            "description": "An overview of the literature and other resources that is used in this course (ECTS-recommended reading and other sources)",
            "items": {
              "type": "string"
            },
            "example": [
              "book to be announced",
              "on-line resource x"
            ]
          },
          "assessment": {
            "type": "array",
            "description": "A description of the way exams for this course are taken (ECTS-assessment method and criteria).",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/LanguageTypedString"
            },
            "example": [
              {
                "language": "en-GB",
                "value": "Exam on campus"
              }
            ]
          },
          "link": {
            "type": "string",
            "description": "URL of the course's website",
            "format": "uri",
            "maxLength": 2048,
            "example": "https://osiris.uu.nl/osiris_student_uuprd/OnderwijsCatalogusZoekCursus.do#submitForm?cursuscode=INFOMQNM"
          },
          "educationSpecification": {
            "description": "The educationSpecification of which this course is a more concrete implementation. [`expandable`](#tag/education_specification_model)",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Identifier",
                "title": "educationSpecificationId"
              },
              {
                "$ref": "#/components/schemas/EducationSpecification",
                "title": "EducationSpecification"
              }
            ]
          },
          "addresses": {
            "type": "array",
            "description": "Addresses for this course",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "otherCodes": {
            "type": "array",
            "description": "An array of additional human readable codes/identifiers for the entity being described.",
            "items": {
              "$ref": "#/components/schemas/IdentifierEntry"
            }
          },
          "consumers": {
            "description": "The additional consumer elements that can be provided, see the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Consumer"
            },
            "example": [
              {
                "consumerKey": "rio",
                "educationOffererCode": "123A321",
                "educationLocationCode": "334X123",
                "consentParticipationSTAP": "permission_granted",
                "jointPartnerCodes": [
                  "123A123"
                ],
                "foreignPartners": [
                  "Harvard University"
                ]
              }
            ]
          },
          "ext": {
            "$ref": "#/components/schemas/Ext"
          },
          "programs": {
            "description": "The program of which this course is a part of. This object is [`expandable`](#tag/program_model)",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Identifier",
                  "title": "programId"
                },
                {
                  "$ref": "#/components/schemas/Program",
                  "title": "Program object"
                }
              ]
            }
          },
          "coordinators": {
            "description": "The person(s) responsible for this course. This object is [`expandable`](#tag/person_model)",
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/Identifier",
                  "title": "personId"
                },
                {
                  "$ref": "#/components/schemas/Person",
                  "title": "Person object"
                }
              ]
            }
          },
          "organization": {
            "description": "The organization that manages this group. [`expandable`](#tag/organization_model)\nBy default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.\n",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Identifier",
                "title": "organizationId"
              },
              {
                "$ref": "#/components/schemas/Organization",
                "title": "Organization object"
              }
            ]
          }
        }
      },
      "Course": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CourseId"
          },
          {
            "$ref": "#/components/schemas/CourseProperties"
          },
          {
            "properties": {
              "validFrom": {
                "description": "The first day this course is valid (inclusive).",
                "type": "string",
                "format": "date"
              },
              "validTo": {
                "description": "The day this course ceases to be valid (e.g. exclusive).",
                "type": "string",
                "format": "date"
              }
            }
          }
        ]
      },
      "TimelineOverrideCourse": {
        "type": "object",
        "required": [
          "validFrom",
          "course"
        ],
        "description": "A timeline override of the course.",
        "properties": {
          "validFrom": {
            "type": "string",
            "description": "The day on which this timelineOverride starts (inclusive), RFC3339 (date)",
            "format": "date",
            "example": "2021-09-01"
          },
          "validTo": {
            "type": "string",
            "description": "The day on which this timelineOverride ends (exclusive), RFC3339 (date)",
            "format": "date",
            "example": "2022-08-31"
          },
          "course": {
            "$ref": "#/components/schemas/CourseProperties"
          }
        }
      },
      "CourseRioConsumer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Consumer"
          },
          {
            "required": [
              "educationOffererCode",
              "consentParticipationSTAP"
            ],
            "properties": {
              "consumerKey": {
                "const": "rio"
              },
              "educationOffererCode": {
                "type": "string",
                "description": "onderwijsaanbiedercode\nEen betekenisloze identifier voor een onderwijsaanbieder in de Registratie Instellingen en Opleidingen.\n",
                "pattern": "^(?:\\d{3}A\\d{3})$"
              },
              "educationLocationCode": {
                "type": "string",
                "description": "onderwijslocatiecode\nEen betekenisloze identifier voor een onderwijslocatie in de Registratie Instellingen en Opleidingen.\n",
                "pattern": "^(?:\\d{3}X\\d{3})$"
              },
              "consentParticipationSTAP": {
                "type": "string",
                "description": "toestemmingDeelnameSTAP\nGeeft aan of een AangebodenOpleiding beschikbaar is in het kader van de STAP-regeling en voorkomt in het Scholingsregister.\n",
                "enum": [
                  "permission_granted",
                  "permission_not_granted"
                ]
              },
              "jointPartnerCodes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "^(?:\\d{3}A\\d{3})$"
                },
                "minItems": 1,
                "description": "samenwerkendeOnderwijsaanbiedercode\nCode van de onderwijsaanbieder waarmee wordt samengewerkt OnderwijsaanbiederID-v01\n"
              },
              "foreignPartners": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1,
                "description": "buitenlandsePartner\nBeschrijving van de organisatie waarmee door een Nederlandse onderwijsbestuur wordt samengewerkt\nbij het verzorgen van een Joint Degree.\n"
              },
              "deficiency": {
                "type": "string",
                "description": "deficientie Geeft aan of inschrijving met onvoldoende vooropleiding mogelijk is\n- deficiencies: DEFICIENTIES\t\t\tInschrijving mogelijk met onvoldoende vooropleiding\n- no_dediciencies: GEEN_DEFICIENTIES\t\t\tInschrijving alleen mogelijk met voldoende vooropleiding\n",
                "enum": [
                  "deficiencies",
                  "no_deficiencies"
                ]
              },
              "requirementsActivities": {
                "type": "string",
                "description": "eisenWerkzaamheden\nGeeft aan of er eisen zijn gesteld aan het type werkzaamheden die verricht worden in het kader van de opleiding.\n- requirements: EISEN\t\t\tEr zijn eisen gesteld aan de werkzaamheden in het kader van de opleiding\n- no_requirements: GEEN_EISEN\t\t\tEr zijn geen eisen gesteld aan de werkzaamheden in het kader van de opleiding\n",
                "enum": [
                  "requirements",
                  "no_requirements"
                ]
              },
              "propaedeuticPhase": {
                "type": "string",
                "description": "propadeutischeFase\nGeeft aan of de aangeboden opleiding een propedeutische fase kent en of deze wordt afgesloten met een propedeutisch examen.\n- no_propaedeutic_phase: GEEN_PROPEDEUTISCHE_FASE\t\t\tGeen propedeutische fase\n- propaedeutic_phase_exam: PROPEDEUTISCHE_FASE_EXAMEN\t\t\tPropedeutische fase met examen\n- propaedeutic_phase_no_exam: PROPEDEUTISCHE_FASE_ZONDER_EXAMEN\t\t\tPropedeutische fase zonder examen\n",
                "enum": [
                  "no_propaedeutic_phase",
                  "propaedeutic_phase_exam",
                  "propaedeutic_phase_no_exam"
                ]
              },
              "studyChoiceCheck": {
                "type": "string",
                "description": "studiekeuzecheck\nSpecificeert of er en zo ja hoe een controle op geschiktheid van een aankomend student voor deelname aan gekozen studie plaatsvindt.\n- no_study_choice_check: GEEN_STUDIEKEUZE_CHECK\t\t\tGeen studiekeuzecheck\n- study_choice_check_available: STUDIEKEUZE_CHECK_VAN_TOEPASSING\t\t\tStudiekeuzecheck van toepassing\n- study_choice_check_mandatory: STUDIEKEUZE_CHECK_VERPLICHT\t\t\tStudiekeuzecheck verplicht\n",
                "enum": [
                  "no_study_choice_check",
                  "study_choice_check_available",
                  "study_choice_check_mandatory"
                ]
              },
              "acceleratedRoute": {
                "type": "string",
                "description": "versneldTraject\nGeeft aan of een student een versneld programma volgt zodat het opleiding in minder tijd dan normaal doorlopen kan worden.\n- accelerated_route: VERSNELD_TRAJECT\t\t\tVersneld traject\n- no_accelerated_route: GEEN_VERSNELD_TRAJECT\t\t\tGeen versneld traject\n",
                "enum": [
                  "accelerated_route",
                  "no_accelerated_route"
                ]
              }
            }
          }
        ]
      },
      "CourseExpanded": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Course"
          },
          {
            "type": "object",
            "description": "These properties are only present when explicitly included",
            "properties": {
              "timelineOverrides": {
                "description": "Timeline overrides allow an implementation to provide versions of entities that will be valid in the future or have been in the past.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TimelineOverrideCourse"
                }
              }
            }
          }
        ],
        "required": [
          "courseId",
          "name",
          "abbreviation",
          "description",
          "primaryCode",
          "level",
          "teachingLanguage",
          "validFrom",
          "educationSpecification",
          "duration"
        ],
        "properties": {
          "consumers": {
            "contains": {
              "$ref": "#/components/schemas/CourseRioConsumer"
            }
          }
        }
      },
      "CourseOfferingProperties": {
        "type": "object",
        "required": [
          "startDate",
          "endDate"
        ],
        "properties": {
          "startDate": {
            "type": "string",
            "description": "The moment on which this offering starts, RFC3339 (full-date)",
            "format": "date",
            "example": "2019-08-21"
          },
          "endDate": {
            "type": "string",
            "description": "The moment on which this offering ends, RFC3339 (full-date)",
            "format": "date",
            "example": "2019-10-23"
          },
          "enrollStartDate": {
            "type": "string",
            "description": "The first day on which a student can enroll for this course.",
            "format": "date",
            "example": "2019-05-01"
          },
          "enrollEndDate": {
            "type": "string",
            "description": "The last day on which a student can enroll for this course.",
            "format": "date",
            "example": "2019-08-01"
          },
          "flexibleEntryPeriodStart": {
            "type": "string",
            "description": "If this is a course wherein participants can start at various moments, without missing anything, use this attribute in combination with `flexibleEntryPeriodEnd`.",
            "format": "date"
          },
          "flexibleEntryPeriodEnd": {
            "type": "string",
            "description": "If this is a course wherein participants can start at various moments, without missing anything, use this attribute in combination with `flexibleEntryPeriodStart`.",
            "format": "date"
          },
          "addresses": {
            "type": "array",
            "description": "Addresses for this offering",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "priceInformation": {
            "type": "array",
            "description": "Price information for this offering.",
            "items": {
              "$ref": "#/components/schemas/Cost"
            }
          },
          "course": {
            "description": "The course that is offered in this courseoffering. [`expandable`](#tag/course_model)\nBy default only the `courseId` (a string) is returned. If the client requested an expansion of `course` the full course object should be returned.\n",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Identifier",
                "title": "courseId"
              },
              {
                "$ref": "#/components/schemas/Course",
                "title": "Course object"
              }
            ]
          },
          "programOffering": {
            "description": "The programoffering where this courseoffering is related to. [`expandable`](#tag/program_offering_model)\nBy default only the `programOfferingId` (a string) is returned. If the client requested an expansion of `programOffering` the full programOffering object should be returned.\n",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Identifier",
                "title": "programOfferingId"
              },
              {
                "$ref": "#/components/schemas/ProgramOffering",
                "title": "ProgramOffering object"
              }
            ]
          },
          "organization": {
            "description": "The organization that manages this courseoffering. [`expandable`](#tag/organization_model)\nBy default only the `organizationId` (a string) is returned. If the client requested an expansion of `organization` the full organization object should be returned.\n",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Identifier",
                "title": "organizationId"
              },
              {
                "$ref": "#/components/schemas/Organization",
                "title": "Organization object"
              }
            ]
          },
          "academicSession": {
            "description": "The academicsession during which this courseoffering takes place. [`expandable`](#tag/academic_session_model)\nBy default only the `academicSessionId` (a string) is returned. If the client requested an expansion of `academicSession` the full academicsession object should be returned.\n",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Identifier",
                "title": "academicSessionId"
              },
              {
                "$ref": "#/components/schemas/AcademicSession",
                "title": "AcademicSession object"
              }
            ]
          }
        }
      },
      "CourseOffering": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Offering"
          },
          {
            "$ref": "#/components/schemas/CourseOfferingProperties"
          },
          {
            "required": [
              "offeringId",
              "primaryCode",
              "offeringType",
              "name",
              "description",
              "teachingLanguage",
              "resultExpected",
              "startDate",
              "endDate",
              "enrollStartDate"
            ]
          }
        ]
      },
      "TimelineOverrideEducationSpecification": {
        "type": "object",
        "description": "A timeline override of the EducationSpecification.",
        "required": [
          "validFrom",
          "educationSpecification"
        ],
        "properties": {
          "validFrom": {
            "type": "string",
            "description": "The day on which this timelineOverride starts (inclusive), RFC3339 (date)",
            "format": "date",
            "example": "2021-09-01"
          },
          "validTo": {
            "type": "string",
            "description": "The day on which this timelineOverride ends (exclusive), RFC3339 (date)",
            "format": "date",
            "example": "2022-08-31"
          },
          "educationSpecification": {
            "$ref": "#/components/schemas/EducationSpecificationProperties"
          }
        }
      },
      "HoOpleidingProperties": {
        "required": [
          "primaryCode",
          "educationSpecificationType",
          "name",
          "validFrom",
          "formalDocument",
          "level",
          "sector"
        ],
        "properties": {
          "educationSpecificationType": {
            "const": "program"
          }
        }
      },
      "HOECProperties": {
        "required": [
          "primaryCode",
          "educationSpecificationType",
          "name",
          "validFrom"
        ],
        "properties": {
          "educationSpecificationType": {
            "const": "cluster"
          }
        }
      },
      "HoOnderwijsEenheidProperties": {
        "required": [
          "primaryCode",
          "educationSpecificationType",
          "name",
          "validFrom"
        ],
        "properties": {
          "educationSpecificationType": {
            "const": "course"
          }
        }
      },
      "HoParticuliereOpleidingProperties": {
        "required": [
          "primaryCode",
          "educationSpecificationType",
          "name",
          "validFrom"
        ],
        "properties": {
          "educationSpecificationType": {
            "const": "privateProgram"
          }
        }
      },
      "EducationSpecificationRioConsumer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Consumer"
          },
          {
            "properties": {
              "consumerKey": {
                "const": "rio"
              },
              "educationSpecificationSubType": {
                "type": "string",
                "enum": [
                  "variant",
                  "cluster"
                ]
              },
              "category": {
                "type": "array",
                "description": "A classification for programs in non-formal education. Used when describing EducationSpecification's that will map to a `articuliereOpleiding in RIO\n",
                "minItems": 0,
                "maxItems": 3,
                "items": {
                  "type": "string",
                  "enum": [
                    "business_and_project_support",
                    "economy",
                    "behavior_and_society",
                    "healthcare_and_sport",
                    "hobby_and_leisure_time",
                    "agriculture_food_and_natural_environment",
                    "management_and_project_management",
                    "nature",
                    "education",
                    "law",
                    "cross_sectoral",
                    "language_and_culture",
                    "technology_and_ict",
                    "tourism_hospitality_and_recreation",
                    "transport_and_logistics",
                    "security_and_defense"
                  ]
                }
              }
            }
          }
        ]
      },
      "EducationSpecificationExpanded": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EducationSpecification"
          },
          {
            "type": "object",
            "title": "With timelineOverrides",
            "properties": {
              "timelineOverrides": {
                "description": "Timeline overrides allow an implementation to provide versions of entities that will be valid in the future or have been in the past.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TimelineOverrideEducationSpecification"
                }
              }
            }
          }
        ],
        "oneOf": [
          {
            "$ref": "#/components/schemas/HoOpleidingProperties"
          },
          {
            "$ref": "#/components/schemas/HOECProperties"
          },
          {
            "$ref": "#/components/schemas/HoOnderwijsEenheidProperties"
          },
          {
            "$ref": "#/components/schemas/HoParticuliereOpleidingProperties"
          }
        ],
        "properties": {
          "consumers": {
            "contains": {
              "$ref": "#/components/schemas/EducationSpecificationRioConsumer"
            }
          }
        }
      }
    },
    "responses": {
      "ErrorBadRequest": {
        "description": "Bad request",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/Problem"
            }
          }
        }
      },
      "ErrorUnauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/Problem"
            }
          }
        }
      },
      "ErrorForbidden": {
        "description": "Forbidden",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/Problem"
            }
          }
        }
      },
      "ErrorNotFound": {
        "description": "Not Found",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/Problem"
            }
          }
        }
      },
      "ErrorMethodNotAllowed": {
        "description": "Method not allowed",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/Problem"
            }
          }
        }
      },
      "ErrorTooManyRequests": {
        "description": "Too many requests",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/Problem"
            }
          }
        }
      },
      "ErrorInternalServerError": {
        "description": "Internal Server Error",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/Problem"
            }
          }
        }
      }
    },
    "parameters": {
      "primaryCode": {
        "name": "primaryCode",
        "in": "query",
        "description": "The primaryCode of the requested item. This is often the source identifier as defined by the institution.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "pageSize": {
        "name": "pageSize",
        "in": "query",
        "description": "The number of items per page",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "default": 10,
          "enum": [
            10,
            20,
            50,
            100,
            250
          ]
        }
      },
      "pageNumber": {
        "name": "pageNumber",
        "in": "query",
        "description": "The page number to get. Page numbers start at 1.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "minimum": 1
        }
      },
      "consumer": {
        "name": "consumer",
        "in": "query",
        "description": "Request entities meant for a specific consumer. This query parameter is independent from the `consumers` attribute. See the [documentation on support for specific consumers](https://open-education-api.github.io/specification/#/consumers) for more information about this mechanism.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "search": {
        "name": "q",
        "in": "query",
        "description": "Filter by items having a name, abbreviation or description containing the given search term (exact partial match, case insensitive)",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "teachingLanguage": {
        "name": "teachingLanguage",
        "in": "query",
        "description": "Filter by teachingLanguage, which is a string describing the main teaching language, should be a three-letter language code as specified by ISO 639-2.",
        "required": false,
        "schema": {
          "type": "string",
          "pattern": "^[a-z]{3}$",
          "minLength": 3,
          "maxLength": 3
        },
        "example": "nld"
      },
      "returnTimelineOverrides": {
        "name": "returnTimelineOverrides",
        "in": "query",
        "description": "Controls whether the attribute `timelineOverrides` is returned or not. The default is `false`, so this has to explicitly set to `true` if a client needs the timeline overrides. See [GET /education-specifications/{educationSpecificationId}](#tag/education-specifications/paths/~1education-specifications~1{educationSpecificationId}/get) for an example.",
        "required": false,
        "schema": {
          "type": "boolean",
          "default": false
        }
      }
    }
  },
  "paths": {
    "/": {
      "get": {
        "parameters": [],
        "summary": "GET /",
        "description": "Get metadata for the service.",
        "tags": [
          "service metadata"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ErrorBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/ErrorUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/ErrorForbidden"
          },
          "404": {
            "$ref": "#/components/responses/ErrorNotFound"
          },
          "405": {
            "$ref": "#/components/responses/ErrorMethodNotAllowed"
          },
          "429": {
            "$ref": "#/components/responses/ErrorTooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/ErrorInternalServerError"
          }
        }
      }
    },
    "/programs": {
      "get": {
        "summary": "GET /programs",
        "description": "Get an ordered list of all programs, ordered by name.",
        "tags": [
          "programs"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/primaryCode"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/consumer"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/teachingLanguage"
          },
          {
            "name": "programType",
            "in": "query",
            "description": "Filter by program type",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/programType"
            }
          },
          {
            "name": "qualificationAwarded",
            "in": "query",
            "description": "Filter by qualificationAwarded",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/qualificationAwarded"
            }
          },
          {
            "name": "levelOfQualification",
            "in": "query",
            "description": "Filter by levelOfQualification",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/levelOfQualification"
            }
          },
          {
            "name": "sector",
            "in": "query",
            "description": "Filter by sector",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/sector"
            }
          },
          {
            "name": "fieldsOfStudy",
            "in": "query",
            "description": "Filter by fieldsOfStudy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "explode": false,
            "description": "Sort by one or more attributes, the default is ascending. Prefixing the attribute with a minus sign `-` allows for descending sort. Examples: [ATTR | -ATTR | ATTR1,-ATTR2]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "programId",
                  "name",
                  "-programId",
                  "-name"
                ]
              },
              "default": [
                "name"
              ],
              "example": [
                "name",
                "programId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Pagination"
                    },
                    {
                      "type": "object",
                      "required": [
                        "items"
                      ],
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ProgramExpanded"
                          }
                        },
                        "ext": {
                          "$ref": "#/components/schemas/Ext"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ErrorBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/ErrorUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/ErrorForbidden"
          },
          "405": {
            "$ref": "#/components/responses/ErrorMethodNotAllowed"
          },
          "429": {
            "$ref": "#/components/responses/ErrorTooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/ErrorInternalServerError"
          }
        }
      }
    },
    "/programs/{programId}": {
      "get": {
        "summary": "GET /programs/{programId}",
        "description": "Get a single program.",
        "tags": [
          "programs"
        ],
        "parameters": [
          {
            "name": "programId",
            "in": "path",
            "description": "Program ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "explode": false,
            "description": "Optional properties to include, separated by a comma",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "parent",
                  "children",
                  "coordinators",
                  "organization",
                  "educationSpecification"
                ]
              }
            }
          },
          {
            "$ref": "#/components/parameters/returnTimelineOverrides"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramExpanded"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ErrorBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/ErrorUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/ErrorForbidden"
          },
          "404": {
            "$ref": "#/components/responses/ErrorNotFound"
          },
          "405": {
            "$ref": "#/components/responses/ErrorMethodNotAllowed"
          },
          "429": {
            "$ref": "#/components/responses/ErrorTooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/ErrorInternalServerError"
          }
        }
      }
    },
    "/programs/{programId}/offerings": {
      "get": {
        "summary": "GET /programs/{programId}/offerings",
        "description": "Get a list of all offerings for this program, ordered chronologically.",
        "tags": [
          "programs"
        ],
        "parameters": [
          {
            "name": "programId",
            "in": "path",
            "description": "Program ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/consumer"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/teachingLanguage"
          },
          {
            "name": "modeOfStudy",
            "in": "query",
            "description": "Filter by modeOfStudy",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/modeOfStudy"
            }
          },
          {
            "name": "resultExpected",
            "in": "query",
            "description": "Filter by resultExpected",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "since",
            "in": "query",
            "description": "Filter all offerings by providing a minimum start date for the corresponding academic session, RFC3339 (full-date). By default only future offerings are shown (equal to `?since=<today>`).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "until",
            "in": "query",
            "description": "Filter all offerings by providing a maximum end date for the corresponding academic session, RFC3339 (full-date).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "explode": false,
            "description": "Sort by one or more attributes, the default is ascending. Prefixing the attribute with a minus sign `-` allows for descending sort. Examples: [ATTR | -ATTR | ATTR1,-ATTR2]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "offeringId",
                  "name",
                  "startDate",
                  "endDate",
                  "-offeringId",
                  "-name",
                  "-startDate",
                  "-endDate"
                ]
              },
              "default": [
                "startDate"
              ],
              "example": [
                "name",
                "-startDate"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Pagination"
                    },
                    {
                      "type": "object",
                      "required": [
                        "items"
                      ],
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ProgramOffering"
                          }
                        },
                        "ext": {
                          "$ref": "#/components/schemas/Ext"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ErrorBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/ErrorUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/ErrorForbidden"
          },
          "404": {
            "$ref": "#/components/responses/ErrorNotFound"
          },
          "405": {
            "$ref": "#/components/responses/ErrorMethodNotAllowed"
          },
          "429": {
            "$ref": "#/components/responses/ErrorTooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/ErrorInternalServerError"
          }
        }
      }
    },
    "/courses": {
      "get": {
        "summary": "GET /courses",
        "description": "Get a list of all courses, ordered by name (ascending).",
        "tags": [
          "courses"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/primaryCode"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/consumer"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/teachingLanguage"
          },
          {
            "name": "level",
            "in": "query",
            "description": "Filter by level",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/level"
            }
          },
          {
            "name": "modeOfDelivery",
            "in": "query",
            "description": "Filter by modeOfDelivery",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/modesOfDelivery"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "explode": false,
            "description": "Sort by one or more attributes, the default is ascending. Prefixing the attribute with a minus sign `-` allows for descending sort. Examples: [ATTR | -ATTR | ATTR1,-ATTR2]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "courseId",
                  "name",
                  "-courseId",
                  "-name"
                ]
              },
              "default": [
                "name"
              ],
              "example": [
                "name",
                "-courseId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Pagination"
                    },
                    {
                      "type": "object",
                      "required": [
                        "items"
                      ],
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CourseExpanded"
                          }
                        },
                        "ext": {
                          "$ref": "#/components/schemas/Ext"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ErrorBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/ErrorUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/ErrorForbidden"
          },
          "405": {
            "$ref": "#/components/responses/ErrorMethodNotAllowed"
          },
          "429": {
            "$ref": "#/components/responses/ErrorTooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/ErrorInternalServerError"
          }
        }
      }
    },
    "/courses/{courseId}": {
      "get": {
        "summary": "GET /courses/{courseId}",
        "description": "Get a single course.",
        "tags": [
          "courses"
        ],
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "description": "Course ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "explode": false,
            "description": "Optional properties to include, separated by a comma",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "programs",
                  "coordinators",
                  "organization",
                  "educationSpecification"
                ]
              }
            }
          },
          {
            "$ref": "#/components/parameters/returnTimelineOverrides"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseExpanded"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ErrorBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/ErrorUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/ErrorForbidden"
          },
          "404": {
            "$ref": "#/components/responses/ErrorNotFound"
          },
          "405": {
            "$ref": "#/components/responses/ErrorMethodNotAllowed"
          },
          "429": {
            "$ref": "#/components/responses/ErrorTooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/ErrorInternalServerError"
          }
        }
      }
    },
    "/courses/{courseId}/offerings": {
      "get": {
        "summary": "GET /courses/{courseId}/offerings",
        "description": "Get a list of all offerings for this course, ordered chronologically.",
        "tags": [
          "courses"
        ],
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "description": "Course ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/consumer"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/teachingLanguage"
          },
          {
            "name": "modeOfDelivery",
            "in": "query",
            "description": "Filter by modeOfDelivery",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/modesOfDelivery"
            }
          },
          {
            "name": "resultExpected",
            "in": "query",
            "description": "Filter by resultExpected",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "since",
            "in": "query",
            "description": "Filter all offerings by providing a minimum start date for the corresponding academic session, RFC3339 (full-date). By default only future offerings are shown (equal to `?since=<today>`).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "until",
            "in": "query",
            "description": "Filter all offerings by providing a maximum end date for the corresponding academic session, RFC3339 (full-date).",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "explode": false,
            "description": "Sort by one or more attributes, the default is ascending. Prefixing the attribute with a minus sign `-` allows for descending sort. Examples: [ATTR | -ATTR | ATTR1,-ATTR2]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "offeringId",
                  "name",
                  "startDate",
                  "endDate",
                  "-offeringId",
                  "-name",
                  "-startDate",
                  "-endDate"
                ]
              },
              "default": [
                "startDate"
              ],
              "example": [
                "offeringId",
                "-endDate"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Pagination"
                    },
                    {
                      "type": "object",
                      "required": [
                        "items"
                      ],
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CourseOffering"
                          }
                        },
                        "ext": {
                          "$ref": "#/components/schemas/Ext"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ErrorBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/ErrorUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/ErrorForbidden"
          },
          "404": {
            "$ref": "#/components/responses/ErrorNotFound"
          },
          "405": {
            "$ref": "#/components/responses/ErrorMethodNotAllowed"
          },
          "429": {
            "$ref": "#/components/responses/ErrorTooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/ErrorInternalServerError"
          }
        }
      }
    },
    "/education-specifications": {
      "get": {
        "summary": "GET /education-specifications",
        "description": "Get a list of all education specifications, ordered by name (ascending).",
        "tags": [
          "education specifications"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageNumber"
          },
          {
            "$ref": "#/components/parameters/consumer"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "educationSpecificationType",
            "in": "query",
            "description": "Filter by type of education specification",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/educationSpecificationType"
            }
          },
          {
            "name": "primaryCode",
            "in": "query",
            "description": "Filter by primary code of education specification",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "explode": false,
            "description": "Sort by one or more attributes, the default is ascending. Prefixing the attribute with a minus sign `-` allows for descending sort. Examples: [ATTR | -ATTR | ATTR1,-ATTR2]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "educationSpecificationType",
                  "name",
                  "primaryCode",
                  "-educationSpecificationType",
                  "-name",
                  "-primaryCode"
                ]
              },
              "default": [
                [
                  "name"
                ]
              ],
              "example": [
                "educationSpecificationType",
                "-primaryCode"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Pagination"
                    },
                    {
                      "type": "object",
                      "required": [
                        "items"
                      ],
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/EducationSpecificationExpanded"
                          }
                        },
                        "ext": {
                          "$ref": "#/components/schemas/Ext"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ErrorBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/ErrorUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/ErrorForbidden"
          },
          "404": {
            "$ref": "#/components/responses/ErrorNotFound"
          },
          "405": {
            "$ref": "#/components/responses/ErrorMethodNotAllowed"
          },
          "429": {
            "$ref": "#/components/responses/ErrorTooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/ErrorInternalServerError"
          }
        }
      }
    },
    "/education-specifications/{educationSpecificationId}": {
      "get": {
        "summary": "GET /education-specifications/{educationSpecificationId}",
        "description": "Get a single education specification.",
        "tags": [
          "education specifications"
        ],
        "parameters": [
          {
            "name": "educationSpecificationId",
            "in": "path",
            "description": "Education specification ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "$ref": "#/components/parameters/returnTimelineOverrides"
          },
          {
            "name": "expand",
            "in": "query",
            "explode": false,
            "description": "Optional properties to include, separated by a comma",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "parent",
                  "children",
                  "organization"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EducationSpecificationExpanded"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ErrorBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/ErrorUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/ErrorForbidden"
          },
          "404": {
            "$ref": "#/components/responses/ErrorNotFound"
          },
          "405": {
            "$ref": "#/components/responses/ErrorMethodNotAllowed"
          },
          "429": {
            "$ref": "#/components/responses/ErrorTooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/ErrorInternalServerError"
          }
        }
      }
    }
  }
}
